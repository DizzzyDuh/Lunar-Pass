[{"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\index.js":"1","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\store.js":"2","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\App.js":"3","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Header.js":"4","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Footer.js":"5","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\ShuttleDetails.js":"6","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Login.js":"7","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Register.js":"8","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PassengersScreen.js":"9","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\BillingAddress.js":"10","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\index.js":"11","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Profile.js":"12","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Admin.js":"13","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllUsers.js":"14","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllOrders.js":"15","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllShuttles.js":"16","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PaymentMethod.js":"17","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\OrderScreen.js":"18","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PlaceOrder.js":"19","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\UserEdit.js":"20","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\CreateShuttle.js":"21","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\ShuttleEdit.js":"22","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\index.js":"23","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Passenger.js":"24","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Steps.js":"25","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\orderActions.js":"26","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\orderConstants.js":"27","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\userConstants.js":"28","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\shuttleConstants.js":"29","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\userActions.js":"30","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\shuttleActions.js":"31","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\shuttleReducers.js":"33","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\userReducers.js":"34"},{"size":264,"mtime":1701887310596,"results":"35","hashOfConfig":"36"},{"size":1050,"mtime":1701887310582,"results":"37","hashOfConfig":"36"},{"size":2194,"mtime":1701887310607,"results":"38","hashOfConfig":"36"},{"size":1598,"mtime":1701887311247,"results":"39","hashOfConfig":"36"},{"size":242,"mtime":1701887311274,"results":"40","hashOfConfig":"36"},{"size":4966,"mtime":1701887311115,"results":"41","hashOfConfig":"36"},{"size":1966,"mtime":1701887311155,"results":"42","hashOfConfig":"36"},{"size":2710,"mtime":1701887311017,"results":"43","hashOfConfig":"36"},{"size":2636,"mtime":1701887311129,"results":"44","hashOfConfig":"36"},{"size":2544,"mtime":1701887311205,"results":"45","hashOfConfig":"36"},{"size":2473,"mtime":1701887311047,"results":"46","hashOfConfig":"36"},{"size":4782,"mtime":1701887311086,"results":"47","hashOfConfig":"36"},{"size":727,"mtime":1701887311061,"results":"48","hashOfConfig":"36"},{"size":2255,"mtime":1701887311005,"results":"49","hashOfConfig":"36"},{"size":1991,"mtime":1701887311191,"results":"50","hashOfConfig":"36"},{"size":3059,"mtime":1701887311142,"results":"51","hashOfConfig":"36"},{"size":1284,"mtime":1701887310977,"results":"52","hashOfConfig":"36"},{"size":5291,"mtime":1701887311219,"results":"53","hashOfConfig":"36"},{"size":5939,"mtime":1701887311101,"results":"54","hashOfConfig":"36"},{"size":2512,"mtime":1701887311032,"results":"55","hashOfConfig":"36"},{"size":4410,"mtime":1701887311169,"results":"56","hashOfConfig":"36"},{"size":5219,"mtime":1701887310990,"results":"57","hashOfConfig":"36"},{"size":1417,"mtime":1701887310622,"results":"58","hashOfConfig":"36"},{"size":3230,"mtime":1701887311235,"results":"59","hashOfConfig":"36"},{"size":623,"mtime":1701887311261,"results":"60","hashOfConfig":"36"},{"size":4528,"mtime":1701887311313,"results":"61","hashOfConfig":"36"},{"size":1336,"mtime":1701887311384,"results":"62","hashOfConfig":"36"},{"size":1534,"mtime":1701887311371,"results":"63","hashOfConfig":"36"},{"size":1237,"mtime":1701887311357,"results":"64","hashOfConfig":"36"},{"size":5865,"mtime":1701887311289,"results":"65","hashOfConfig":"36"},{"size":4707,"mtime":1701887311327,"results":"66","hashOfConfig":"36"},{"size":3532,"mtime":1701887310634,"results":"67","hashOfConfig":"36"},{"size":3107,"mtime":1701887310647,"results":"68","hashOfConfig":"36"},{"size":3971,"mtime":1701887310661,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rikd0h",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\index.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\store.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\App.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Header.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Footer.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\ShuttleDetails.js",["152"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {loadShuttle} from '../actions/shuttleActions'\nimport '../css/shuttledetails.css'\n\nconst ShuttleDetails = ({match , history}) => {\n\n    const id = match.params.id;\n\n    const dispatch = useDispatch();\n\n    const getShuttle = useSelector(state => state.getShuttle);\n    const {loading , shuttle} = getShuttle;\n\n    const [seats , setSeats] = useState(1);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const {userData} = userLogin\n\n    useEffect(\n        () => {\n            dispatch(loadShuttle(id))\n        }\n    , [dispatch , id])\n\n    const handleSeatChange = (e) => {\n        setSeats(Number(e.target.value));\n    }\n\n    const handleSeatsSelection = (e) =>{\n\n        if(userData)\n            history.push(`/shuttle/${shuttle._id}/proceed?seats-${seats}`)\n        else {\n            history.push(`/login?/shuttle/${shuttle._id}/proceed?seats-${seats}`)\n        }\n        console.log(seats);\n    \n    }\n\n    return (\n        (!loading && \n        <>\n        <div className=\"goback container\">\n            <Link className=\"back\" to='/'><i className=\"fas fa-arrow-circle-left\"></i> Go Back</Link>\n        </div>\n        <section id=\"shuttleDetails\">\n            <div className=\"left\">\n                <p className=\"title\">Shuttle Details</p>\n                <div className=\"basic\">\n                    <p className=\"name\">Name : {shuttle.name}</p>\n                    <p className=\"number\">Number : {shuttle.number}</p>\n                    <p className=\"total\"><em>Total Travel Durating</em> : {`${shuttle.duration.split(':')[0]} hr ${shuttle.duration.split(':')[1]}m `}</p>\n                    <p className=\"price\">Price: <i className=\"fas fa-rupee-sign\"></i> {shuttle.price}</p>\n                </div>\n                <hr />\n                    <div className=\"fromDetails\">\n                        <p className=\"title\"><i classNam=\"fas fa-plane-departure\"></i> OnBoarding Details</p>\n                        <p className=\"onboard-location\"><i className=\"fas fa-place-of-worship\"></i> <em>Place</em> : {shuttle.from}</p>\n                        <p className=\"onboard-date\">\n                            <i className=\"fas fa-calendar-week\"></i> <em>Date</em> : {shuttle.fromDate ? shuttle.fromDate.substring(0 , 10) : '12-12-2020'}\n                        </p>\n                        <p className=\"onboard-date\">\n                            <i className=\"fas fa-clock\"></i> <em>Time</em> : {shuttle.fromTime}\n                        </p>\n                    </div>\n                    <hr />\n                    <div className=\"toDetails\">\n                        <p className=\"title\"><i classNam=\"fas fa-plane-arrival\"></i> OffBoarding Details</p>\n                        <p className=\"onboard-location\"><i className=\"fas fa-place-of-worship\"></i> <em>Place</em> : {shuttle.to}</p>\n                        <p className=\"onboard-date\">\n                            <i className=\"fas fa-calendar-week\"></i> <em>Date</em> : {shuttle.toDate ? shuttle.toDate.substring(0 , 10) : '12-12-2020'}\n                        </p>\n                        <p className=\"onboard-date\">\n                            <i className=\"fas fa-clock\"></i> <em>Time</em> : {shuttle.toTime}\n                        </p>\n                    </div>\n                    <hr />\n            </div>\n                        <div className=\"right\">\n                <p className=\"seats title\">Seating Numbers</p>\n                <img src=\"/images/air-seats.jpg\"></img>\n            </div>\n            <div className=\"start-booking\">\n            <p className=\"title\">Start Booking Now !!</p>\n            <div className=\"form-container\">\n                <form>\n                    <label htmlFor=\"seats\" className=\"seats-label\">Select the No of seats you would like to book</label>\n                    <select onChange={handleSeatChange} value={seats}>\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                    <button onClick={handleSeatsSelection} className=\"seats-button\"> Next </button>\n                </form>\n                </div>\n                <div className=\"note\">\n                    <p className=\"note-title\"><em>Note :</em></p>\n                    <ul>\n                        <li>Seat Number follows as: <i>Row_Name Row_Number (Ex - A16)</i></li>\n                        <li>Passenger must check-in 2 hours prior to the onBoarding Time </li>\n                        <li>Maximum number of bookings/account is limited to 5</li>\n                    </ul>\n                </div>\n            </div>\n\n        </section></>)\n    )\n}\n\nexport default ShuttleDetails\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Login.js",["153"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../actions/userActions';\nimport '../css/Login.css'\n\nconst Login = ({location , history}) => {\n\n    const [email , setEmail] = useState('');\n    const [password , setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { loading , userData} = userLogin;\n\n    // const \n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(\n        () => {\n            if(!loading){\n                if(userData) {\n                    history.push(`${redirect}`)\n                }\n            }\n        }\n    , [redirect , userData])\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        if(email && password)\n            dispatch(loginUser({email , password}))\n    }\n\n    return (\n        <>\n            <section id=\"login\">\n                <p className=\"title\">Login</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"email-container\">\n                    <label className=\"email-label\">Email Address</label>\n                    <input type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} placeholder=\"email address\" htmlFor=\"email\" />\n                </div>\n                <div className=\"password-container\">\n                    <label className=\"password-label\">Password</label>\n                    <input onChange={(e) => setPassword(e.target.value)} type=\"password\" value={password} placeholder=\"Password\" htmlFor=\"password\" />\n                </div>\n                <button onClick={handleLogin} className=\"submit\">Login</button>\n                <div className=\"new\">New Customer ? <Link to='/register'> Register </Link></div>\n            </section>\n        </>\n    )\n}\n\nexport default Login\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Register.js",["154","155"],"import React, { useEffect, useState } from 'react'\nimport {useDispatch , useSelector} from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { createUser } from '../actions/userActions';\nimport '../css/register.css'\n\nconst Register = ({history , location}) => {\n\n    const [name , setName] = useState('');\n    const [email , setEmail] = useState('');\n    const [password , setPassword] = useState('');\n    const [confirmPassword , setConfirmPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n    const {success , loading} = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(\n        () => {\n            if(!loading){\n                if(success) {\n                    history.push(`${redirect}`)\n                }\n            }\n        }\n    , [redirect , success])\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if(password == confirmPassword){\n            dispatch(createUser({name , email , password}))\n        }\n\n    }\n\n    return (\n        <>\n            <section id=\"register\">\n                <p className=\"title\">register</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"name-container\">\n                    <label className=\"name-label\">name</label>\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} placeholder=\"name\" htmlFor=\"name\" />\n                </div>\n\n                <div className=\"email-container\">\n                    <label className=\"email-label\">Email Address</label>\n                    <input type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} placeholder=\"email address\" htmlFor=\"email\" />\n                </div>\n                <div className=\"password-container\">\n                    <label className=\"password-label\">Password</label>\n                    <input onChange={(e) => setPassword(e.target.value)} type=\"password\" value={password} placeholder=\"Password\" htmlFor=\"password\" />\n                </div>\n                <div className=\"confirm-password-container\">\n                    <label className=\"password-label\">Password</label>\n                    <input onChange={(e) => setConfirmPassword(e.target.value)} type=\"password\" value={confirmPassword} placeholder=\"Password\" htmlFor=\"password\" />\n                </div>\n                <button onClick={handleRegister} className=\"submit\">register</button>\n                <div className=\"new\">Already have an account ? <Link to='/login'> Login </Link> </div>\n            </section>\n        </>\n    )\n}\n\nexport default Register\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PassengersScreen.js",["156","157","158","159"],"import React, { useEffect, useState } from 'react'\nimport '../css/passengersscreen.css'\nimport Passenger from '../Components/Passenger'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadShuttle } from '../actions/shuttleActions'\n\nconst PassengersScreen = ({history , match , location }) => {\n\n    const id = match.params.id\n    const seats = location.search? (location.search.split(\"-\")[1]) : null\n\n\n    const dispatch = useDispatch();\n\n    useEffect(\n        () => {\n            dispatch(loadShuttle(match.params.id))\n\n        }\n    , [dispatch ])\n\n    const callFunction = () => {\n        document.querySelector('.proceed-next').style.display = 'block'\n        document.querySelector('.display').style.display = 'none'\n    }\n\n    const showWarning = () => {\n        document.querySelector('.warning').style.display = 'block';\n        \n        setTimeout(() => {\n            document.querySelector('.warning').style.display = 'none';\n        } , 5000)\n    }\n\n    const handleCart = (e) => {\n        e.preventDefault();\n        history.push('/billing')\n    }\n\n    return (\n        <section id=\"passengers\">\n            <div className=\"form-container\">\n                <div className=\"content\">\n                    Please do read these :\n                    <ul>\n                        <li>Please do fill all the passengers details with appropriate details </li>\n                        <li> Check this out to know the seating numbers naming convention - <a target='_blank' href=\"http://localhost:3000/images/air-seats.jpg\">Click here</a> </li>\n                        <li>Seating Numbers follows the following naming convention - <em>Row_Name Row_Number</em> (Ex-A01) </li>\n                        <li>An Additional Ticket is required for all the children aged above 1 year</li>\n                        <li>Refund Options Unavailable</li>\n                    </ul>\n                </div>\n                <p className=\"enter\"> Please do enter all the Passenger's details below </p>\n                <p className=\"warning\">The Seat which you are trying to book isn't available</p>\n                <Passenger callFunction = {callFunction}\n                 seats={seats} showWarning = {showWarning} id={id}/>\n            </div>\n            <div className=\"order-details\">\n                <p className=\"enter display\">Fill all the passengers details to proceed to next page</p>\n                <div className=\"container\">\n                    <button onClick={handleCart} className=\"proceed-next\">Proceed to Cart</button>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default PassengersScreen\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\BillingAddress.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\index.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Profile.js",["160","161","162","163"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserOrders } from '../actions/orderActions';\nimport { getUserProfile, updateProfile } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport '../css/profile.css'\n\nconst Profile = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const [name , setName] = useState('');\n    const [email , setEmail] = useState('');\n    const [password , setPassword] = useState('');\n    const [confirmPassword , setConfirmPassword] = useState('');\n\n    const getUser = useSelector(state => state.getUser);\n    const {loading , userData} = getUser;\n\n    const updateUser = useSelector(state => state.updateUser);\n    const {success , loading:loadingUpdate} = updateUser;\n\n    const userOrders = useSelector(state => state.userOrders);\n    const {loading:loadingOrders , success:successTable , orders} = userOrders;\n    \n    useEffect(() => {\n        if(!loadingUpdate && success){\n            dispatch({type : USER_UPDATE_RESET});\n        } else {\n            if(!userData) {\n                dispatch(getUserProfile());\n                dispatch(getUserOrders());\n            } else {\n                    setName(userData.name)\n                    setEmail(userData.email)\n            }\n        }\n    } , [dispatch , userData , success , updateUser])\n\n\n    const handleUpdate = () => {\n        console.log('hello')\n        if(password == confirmPassword){\n            dispatch(updateProfile({email , name , password}))\n        } else {\n            dispatch(updateProfile({email , name}))\n        }\n    }\n\n\n    return (\n        <>\n        <section id=\"profile\">\n            <div className=\"inside\">\n                <div className=\"user-profile\">\n                <p className=\"title\">User Profile</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"name-container\">\n                    <label className=\"name-label\">Name</label>\n                    <input onChange={e => setName(e.target.value)} value={name} type=\"name\" placeholder=\"Your Name\" htmlFor=\"name\" />\n                </div>\n                <div className=\"email-container\">\n                    <label className=\"email-label\">Email Address</label>\n                    <input onChange={e => setEmail(e.target.value)} value={email} type=\"email\" placeholder=\"email address\" htmlFor=\"email\" />\n                </div>\n                <div className=\"password-container\">\n                    <label className=\"password-label\">Password</label>\n                    <input onChange={e => setPassword(e.target.value)} value={password} type=\"password\" placeholder=\"Password\" htmlFor=\"password\" />\n                </div>\n                <div className=\"password-container\">\n                    <label className=\"password-label\">Confirm Password</label>\n                    <input onChange={e => setConfirmPassword(e.target.value)} value={confirmPassword} type=\"password\" placeholder=\"Confirm Password\" htmlFor=\"password\" />\n                </div>\n                <button onClick={handleUpdate} className=\"submit\">Update</button>\n                </div>\n                <div className=\"my-orders\">\n                <div className=\"title\">My Orders</div>\n                <table>\n                    <thead>\n                    <tr>\n                        <td>ID</td>\n                        {/* <td>DATE</td> */}\n                        {/* <td>TIME</td> */}\n                        <td>PRICE</td>\n                        <td>TOTAL PASSENGERS</td>\n                        <td>PAID</td>\n                        <td />\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {!loadingOrders && orders.map(order => \n                            <tr>\n                                <td>{order._id}</td>\n                                {/* <td>{order.isPaid ? order.createdAt.substring(0 , 10) : 'Not yet paid'}</td> */}\n                                {/* <td>{order.isPaid ? order.paidAt.substring(11,19) : 'Not yet paid'}</td> */}\n                                <td>{order.totalPrice} INR</td>\n                                <td>{order.passengers.length}</td>\n                                <td>{order.isPaid ? <i class=\"fas fa-check-circle\"></i> : <i class=\"far fa-times-circle\"></i>}</td>\n                                <td><button onClick={() => history.push(`/order/${order._id}`)}> Details</button></td>\n                            </tr>                        \n                        )\n                        }\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        </section>\n        </>\n    )\n}\n\nexport default Profile","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\Admin.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllUsers.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllOrders.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\AllShuttles.js",["164"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteShuttle, loadShuttles } from '../actions/shuttleActions';\nimport { SHUTTLE_DELETE_RESET } from '../constants/shuttleConstants';\nimport '../css/allshuttles.css'\n\nconst AllShuttles = ({history}) => {\n\n    const dispatch = useDispatch();\n\n    const getShuttles = useSelector(state => state.getShuttles);\n    const {loading , shuttles} = getShuttles;\n\n    const deletedShuttle = useSelector(state => state.deleteShuttle);\n    const {loading:loadingDelete , success} = deletedShuttle;\n\n\n    useEffect(\n        () => {\n            if(success){\n                dispatch(loadShuttles());\n                dispatch({type : SHUTTLE_DELETE_RESET})\n            } else {\n                if(!shuttles)\n                    dispatch(loadShuttles())\n            }\n        }\n    , [dispatch , shuttles , success])\n\n    const handleDelete = (id) => {\n        if(window.confirm('Are you that you want to delete the shuttle ?')){\n            dispatch(deleteShuttle(id));\n        }\n    }\n\n\n    return (\n        !loading &&\n        <>\n            <section id=\"all-shuttles\">\n                <p className=\"title\">All Shuttles</p>\n                <button onClick={() => history.push('/admin/shuttle/add/new')} className=\"createAccount\">Create Shuttle</button>\n                    <table>\n                        <thead>\n                        <tr>\n                            <td>ID</td>\n                            <td>NAME</td>\n                            <td>FROM</td>\n                            <td>TO</td>\n                            <td>PRICE</td>\n                            <td>FROM DATE AND TIME</td>\n                            <td>TO DATE AND TIME</td>\n                            <td />\n                        </tr>\n                        </thead>\n                        <tbody>\n                            {shuttles.reverse().map(shuttle => \n                                <tr key={shuttle._id}>\n                                    <td>{shuttle._id}</td>\n                                    <td>{shuttle.name}</td>\n                                    <td>{shuttle.from}</td>\n                                    <td>{shuttle.to}</td>\n                                    <td>Rs.{shuttle.price}</td>\n                                    <td>{shuttle.fromDate ? shuttle.fromDate.substring(0, 10) : '12-06-12'}<br />{shuttle.fromTime}</td>\n                                    <td>{shuttle.toDate ? shuttle.toDate.substring(0, 10) : '12-06-12'}<br />{shuttle.toTime}</td>\n                                    <td className=\"icons\"><i onClick={() => {handleDelete(shuttle._id)}} className=\"fas fa-trash\"></i><i onClick={() => history.push(`/admin/shuttle/${shuttle._id}`)} className=\"fas fa-edit\"></i></td>\n                                </tr>                        \n                            )\n                            }\n                        </tbody>\n                    </table>\n            </section>\n        </>\n    )\n}\n\nexport default AllShuttles\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PaymentMethod.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\OrderScreen.js",["165","166","167","168","169","170"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {fetchOrder, updatedOrderToPaid} from '../actions/orderActions'\nimport '../css/paymentpage.css'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport { ORDER_FETCH_RESET, ORDER_PAID_RESET } from '../constants/orderConstants';\nimport { loadShuttle } from '../actions/shuttleActions';\n\nconst OrderScreen = ({match}) => {\n\n    const id = match.params.id;\n\n    const dispatch = useDispatch();\n\n    const fetcOrder = useSelector(state => state.fetchOrder);\n    const {loading , error , order } = fetcOrder;\n\n\n    const updatedOrder = useSelector(state => state.updatedOrder);\n    const {loading : loadingUpdate , order : updatedorder , success } = updatedOrder;\n\n\n\n    useEffect(() => {\n        if(!order || order._id !== id){\n            dispatch(fetchOrder(id));\n        } else {\n            if(success){\n                dispatch(fetchOrder(id));\n                dispatch({type : ORDER_PAID_RESET})\n            } \n        }\n    } , [dispatch , id , success])\n\n    let paypalamount;\n    \n    if(!loading){\n        paypalamount = (order.totalPrice/74).toFixed(2)\n        console.log(paypalamount)\n    }\n\n    const handlepaypalSuccess = (success) => {\n        dispatch(updatedOrderToPaid(id , success));\n        // dispatch(fetchOrder(id))\n    }\n\n    return (\n            !loading ?          \n            <section id=\"payment-page\">\n                <div id=\"left\">\n                    <div className=\"billing\">\n                    <p className=\"title\">Billing</p>\n                    <p className=\"value\">{order.billingAddress.address} , {order.billingAddress.city}  {order.billingAddress.postalCode} , {order.billingAddress.country}</p>\n                    <hr />\n                    </div>\n                    <div className=\"payment-method\">\n                    <p className=\"title\">PAYMENT METHOD</p>\n                    <p className=\"value\">Method : {order.paymentMethod}</p>\n                    {order.isPaid ? <p className=\"order-notification green\">Payment has been successful </p> : <p className=\"order-notification red\">Not paid</p>}\n                    <hr />\n                    </div>\n                    <div className=\"order-items-container\">\n                    <p className=\"title\">Passengers Details</p>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>Name</td>\n                                <td>Age</td>\n                                <td>SeatNo</td>\n                                </tr>\n                        </thead>\n                        <tbody>\n                            {(order.passengers).map(passenger => \n                            <tr key={passenger.seat} className=\"item\">\n                                <td>{passenger.name}</td>\n                                <td>{passenger.age}</td>\n                                <td>{passenger.seat}</td>\n                            </tr>  \n                            )}\n                        </tbody>\n                    </table>\n                    <hr />\n                         \n                        {order.shuttle && <> <p className=\"title\">Shuttle Details</p>\n                        <div className=\"shuttle-details-container\">\n                                <p className=\"name\">Name : {order.shuttle.name}</p>\n                                <p className=\"name\">Number : {order.shuttle.number}</p>\n                                <p className=\"name\">Price : {order.shuttle.price}</p>\n                                <p className=\"name\">From: {order.shuttle.from}</p>\n                                <p className=\"name\">To : {order.shuttle.to}</p>\n                                <p className=\"name\">OnBoarding Time : {order.shuttle.fromTime}</p>\n                                <p className=\"name\">OffBoarding Time : {order.shuttle.toTime}</p>\n                                <p className=\"name\">Onboarding Date : {order.shuttle.fromDate ? order.shuttle.fromDate.substring(0, 10) : '12-12-2020'}</p>\n                                <p className=\"name\">Offboarding Date : {order.shuttle.toDate ? order.shuttle.toDate.substring(0, 10) : '13-12-2020'}</p>\n                        </div></> }\n                    </div>\n                </div>\n                <div id=\"right\">\n                    <div className=\"title\">\n                    Order Summary\n                    </div>\n                    <div className=\"items-summary row\">\n                    <p className=\"value\">Total Passengers</p>\n                    <p className=\"value\">{order.totalPassengers}</p>\n                    </div>\n\n                    <div className=\"tax-summary row\">\n                    <p className=\"value\">Tax</p>\n                    <p className=\"value\">Rs {order.taxPrice}</p>\n                    </div><div className=\"total-summary row\">\n                    <p className=\"value\">total</p>\n                    <p className=\"value\">Rs {order.totalPrice}</p>\n                    </div>\n                    {!order.isPaid && <paypalButton amount={paypalamount} onSuccess = {handlepaypalSuccess}/>}\n                </div>\n                </section> : error ? <p>{error}</p> : <h1>Loading....</h1>\n    )\n}\n\nexport default OrderScreen","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\PlaceOrder.js",["171","172"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deletePassengerDetails, loadShuttle } from '../actions/shuttleActions'\nimport { createOrder } from '../actions/orderActions'\nimport Steps from '../Components/Steps'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport '../css/placeorder.css'\n\nconst PlaceOrder = ({history}) => {\n\n    const Passengers = useSelector(state => state.passengers);\n    const {loading , passengers } = Passengers;\n\n    const shuttleId = passengers[0] ? passengers[0].shuttle : undefined;\n\n    const dispatch = useDispatch();\n\n    const getShuttle = useSelector(state => state.getShuttle);\n    const {loading : loadingShuttle , shuttle} = getShuttle;\n\n    const createdOrder = useSelector(state => state.createdOrder);\n    const { loading : loadingCreateOrder , success , order} = createdOrder;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const {userData} = userLogin;\n\n    const billingAddress = useSelector(state => state.billingAddress);\n    const { address} = billingAddress\n\n    const paymentMethod = useSelector(state => state.paymentMethod);\n    const { method} = paymentMethod\n\n\n    let totalPrice;\n    let taxPrice;\n\n    useEffect(() => {\n        if(success) {\n            history.push(`/order/${order._id}`)\n            dispatch({type : ORDER_CREATE_RESET})\n        } else {\n        if(shuttleId)\n        dispatch(loadShuttle(shuttleId))\n        }\n    } , [shuttleId , dispatch , totalPrice , success ])\n\n    if(!loadingShuttle ){\n        totalPrice = (passengers.length * shuttle.price).toFixed(2);\n        taxPrice = (totalPrice * 0.18).toFixed(2);\n    }\n\n    const handleOrder = () => {\n        if(!loadingShuttle )\n        console.log(billingAddress)\n        dispatch(createOrder({user : userData._id , shuttle : shuttleId , passengers , billingAddress : address , paymentMethod : method.paymentMethod ,  taxPrice , totalPrice , totalPassengers : passengers.length }))\n    }\n\n    return (\n        <>\n            <Steps step1 step2 step3 step4 />\n            <section id=\"order-page\">\n                <div id=\"left\">\n                    <div className=\"billing\">\n                    <p className=\"title\">Billing</p>\n                    <p className=\"value\">Address : Antariksh Bhavan, New BEL Road, Bengaluru - 560 231, Karnataka, India</p>\n                    <hr />\n                    </div>\n                    <div className=\"payment-method\">\n                    <p className=\"title\">PAYMENT METHOD</p>\n                    <p className=\"value\">Method : Netbanking</p>\n                    <hr />\n                    </div>\n                    <div className=\"order-items-container\">\n                    <p className=\"title\">Passengers Details</p>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td>Name</td>\n                                <td>Age</td>\n                                <td>SeatNo</td>\n                                <td></td>\n                                </tr>\n                        </thead>\n                        <tbody>\n                            {!loading && passengers.map(passenger => \n                            <tr key={passenger.seat} className=\"item\">\n                                <td>{passenger.name}</td>\n                                <td>{passenger.age}</td>\n                                <td>{passenger.seat}</td>\n                                <td style={{cursor: \"pointer\"}}> <i onClick={() => dispatch(deletePassengerDetails(passenger.seat))} className=\"fas fa-trash\"></i> </td>\n                            </tr>  \n                            )}\n                        </tbody>\n                    </table>\n                    <hr />\n                    {!loadingShuttle && shuttleId &&\n                        <> \n                        <p className=\"title\">Shuttle Details</p>\n                        <div className=\"shuttle-details-container\">\n                                <p className=\"name\">Name : {shuttle.name}</p>\n                                <p className=\"name\">Number : {shuttle.number}</p>\n                                <p className=\"name\">Price : {shuttle.price}</p>\n                                <p className=\"name\">From: {shuttle.from}</p>\n                                <p className=\"name\">To : {shuttle.to}</p>\n                                <p className=\"name\">OnBoarding Time : {shuttle.fromTime}</p>\n                                <p className=\"name\">OffBoarding Time : {shuttle.toTime}</p>\n                                <p className=\"name\">Onboarding Date : {shuttle.fromDate ? shuttle.fromDate.substring(0, 10) : '12-12-2020'}</p>\n                                <p className=\"name\">Offboarding Date : {shuttle.toDate ? shuttle.toDate.substring(0, 10) : '13-12-2020'}</p>\n                        </div>\n                        </>\n                    }\n                    </div>\n                </div>\n                <div id=\"right\">\n                    <div className=\"title\">\n                    Order Summary\n                    </div>\n                    <div className=\"items-summary row\">\n                    <p className=\"value\">Total Passengers</p>\n                    <p className=\"value\">{passengers.length}</p>\n                    </div>\n\n                    <div className=\"tax-summary row\">\n                    <p className=\"value\">Tax</p>\n                    <p className=\"value\">{!loadingShuttle && taxPrice}</p>\n                    </div><div className=\"total-summary row\">\n                    <p className=\"value\">total</p>\n                    <p className=\"value\">{!loadingShuttle && totalPrice}</p>\n                    </div>\n                    <button onClick={handleOrder} className=\"submit\">Place order</button>\n                </div>\n                </section>\n\n        </>\n    )\n}\n\nexport default PlaceOrder","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\UserEdit.js",["173","174","175","176"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllUsers, getUserAdmin, getUserProfile, updateUserProfile } from '../actions/userActions';\nimport { UPDATE_USER_RESET } from '../constants/userConstants';\nimport '../css/userEdit.css'\n\nconst UserEdit = ({match , history}) => {\n\n    const id = match.params.id;\n\n    const [name , setName] = useState('');\n    const [email , setEmail] = useState('');\n    const [isAdmin , setIsAdmin] = useState(true);\n\n    const userProfile = useSelector(state => state.userProfile);\n    const {loading , userData} = userProfile;\n\n    const profileUpdate = useSelector(state => state.profileUpdate);\n    const {loading:loadingUpdate , success} = profileUpdate;\n\n\n    const dispatch = useDispatch();\n\n    useEffect(\n        () => {\n            if(!userData || userData._id !== id)\n                dispatch(getUserAdmin(id));\n            else {\n                setName(userData.name);\n                setEmail(userData.email);\n                setIsAdmin(userData.isAdmin);\n            }\n        }\n    , [dispatch , id , userData])\n\n    const handleUpdate = () => {\n        dispatch(updateUserProfile({name , email , isAdmin , id}));\n        console.log(isAdmin);\n        dispatch(fetchAllUsers())\n        dispatch({type : UPDATE_USER_RESET})\n        history.push('/admin/users');\n    }\n    \n    return (\n            <section id=\"userEdit\">\n                <p className=\"title\">Edit User</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"name-container\">\n                    <label className=\"name-label\">name</label>\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} placeholder=\"name\" htmlFor=\"name\" />\n                </div>\n\n                <div className=\"email-container\">\n                    <label className=\"email-label\">Email Address</label>\n                    <input type=\"email\" onChange={(e) => setEmail(e.target.value)} value={email} placeholder=\"email address\" htmlFor=\"email\" />\n                </div>\n                <div className=\"checkbox\">\n                    <label className=\"isAdmin-label\">Is Admin ?</label>\n                    <input type=\"checkbox\" checked={isAdmin}  onChange={(e) => { setIsAdmin(e.target.checked)}}  />\n                </div>\n                <button onClick={handleUpdate} className=\"submit\">Update</button>\n            </section>\n    )\n}\n\nexport default UserEdit\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\CreateShuttle.js",["177","178"],"import React , {useState , useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { addShuttle, loadShuttles } from '../actions/shuttleActions';\nimport { SHUTTLE_ADD_RESET } from '../constants/shuttleConstants';\nimport '../css/createshuttles.css'\n\nconst CreateShuttle = ({history}) => {\n    const [name , setName] = useState('');\n    const [number , setNumber] = useState('');\n    const [from , setFrom] = useState('')\n    const [to , setTo] = useState('')\n    const [fromDate , setFromDate] = useState('');\n    const [toDate , setToDate] = useState('');\n    const [fromTime , setFromTime] = useState('');\n    const [toTime , setToTime] = useState('');\n    const [duration , setDuration] = useState('');\n    const [price , setPrice] = useState(0);\n\n    const dispatch = useDispatch();\n\n    const AddShuttle = useSelector(state => state.addShuttle);\n    const {success , loading } = AddShuttle\n\n    useEffect(() => {\n        if(success){\n            history.push('/admin/shuttles');\n            dispatch(loadShuttles());\n            dispatch({type : SHUTTLE_ADD_RESET})\n        }\n    } , [ dispatch , success])\n\n        const handleAdd = () => {\n        dispatch(addShuttle({name,number,from,to,fromDate,toDate ,fromTime,toTime,duration,price}))\n    }\n\n    return (\n        <>\n            <section id=\"addShuttle\">\n                <p className=\"title\">Add Shuttle</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"name-container\">\n                    <label className=\"name-label\">name</label>\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} placeholder=\"name\" htmlFor=\"name\" />\n                </div>\n\n                <div className=\"number-container\">\n                    <label className=\"number-label\">number</label>\n                    <input type=\"text\" onChange={(e) => setNumber(e.target.value)} value={number} placeholder=\"Shuttle number\" htmlFor=\"number\" />\n                </div>\n\n                <div className=\"from-container\">\n                    <label className=\"from-label\">on Boarding Place</label>\n                    <input type=\"text\" onChange={(e) => setFrom(e.target.value)} value={from} placeholder=\"On Boarding Place\" />\n                </div>\n\n                <div className=\"to-container\">\n                    <label className=\"to-label\">Off boarding place</label>\n                    <input type=\"text\" onChange={(e) => setTo(e.target.value)} value={to} placeholder=\"to\" />\n                </div>\n                <div className=\"fromDate-container\">\n                    <label className=\"fromDate-label\">OnBoarding Date</label>\n                    <input type=\"Date\" onChange={(e) => setFromDate((e.target.value))} value={fromDate} placeholder=\"fromDate\" />\n                </div>\n                <div className=\"toDate-container\">\n                    <label className=\"toDate-label\">Off Boarding Date</label>\n                    <input type=\"Date\" onChange={(e) => setToDate((e.target.value))} value={toDate} placeholder=\"number\"  />\n                </div>\n                <div className=\"fromTime-container\">\n                    <label className=\"fromTime-label\">OnBoarding Time</label>\n                    <input type=\"Time\" onChange={(e) => setFromTime((e.target.value))} value={fromTime} placeholder=\"on Boarding Time\" />\n                </div>\n                <div className=\"toTime-container\">\n                    <label className=\"toTime-label\">Off Boarding Time</label>\n                    <input type=\"Time\" onChange={(e) => setToTime((e.target.value))} value={toTime} placeholder=\"Off Boarding Time\"  />\n                </div>\n                <div className=\"duration-container\">\n                    <label className=\"duration-label\">Travel Duration</label>\n                    <input type=\"Time\" onChange={(e) => setDuration((e.target.value))} value={duration} placeholder=\"Total Travel Duration\"  />\n                </div>\n                <div className=\"Price-container\">\n                    <label className=\"price-label\">Price (Rs)</label>\n                    <input type=\"number\" onChange={(e) => setPrice((e.target.value))} value={price} placeholder=\"Price\" />\n                </div>\n                <button onClick={handleAdd} className=\"submit\">ADD</button>\n            </section>\n        </>\n    )\n}\n\nexport default CreateShuttle\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\screens\\ShuttleEdit.js",["179","180","181"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadShuttle, loadShuttles, updateShuttle } from '../actions/shuttleActions';\nimport { SHUTTLE_UPDATE_RESET } from '../constants/shuttleConstants';\n\nconst ShuttleEdit = ({match , history}) => {\n\n    const [name , setName] = useState('');\n    const [number , setNumber] = useState('');\n    const [from , setFrom] = useState('')\n    const [to , setTo] = useState('')\n    const [fromDate , setFromDate] = useState('');\n    const [toDate , setToDate] = useState('');\n    const [fromTime , setFromTime] = useState('');\n    const [toTime , setToTime] = useState('');\n    const [duration , setDuration] = useState('');\n    const [price , setPrice] = useState(0);\n\n    const shuttleId = match.params.id;\n\n    const dispatch = useDispatch();\n\n    const updatedShuttle = useSelector(state => state.updateShuttle);\n    const {loading:loadingUpdate , success} = updatedShuttle;\n\n    const getShuttle = useSelector(state => state.getShuttle);\n    const {loading , shuttle} = getShuttle;\n\n    useEffect(() => {\n        if(success){\n            history.push('/admin/shuttles');\n            dispatch(loadShuttles());\n            dispatch({type : SHUTTLE_UPDATE_RESET});\n        } else {\n            if( !shuttle) {\n                dispatch(loadShuttle(shuttleId));\n            }else {\n                setName(shuttle.name);\n                setNumber(shuttle.number);\n                setFrom(shuttle.from);\n                setTo(shuttle.to);\n                setFromDate((shuttle.fromDate.substring(0 , 10)));\n                setFromTime(shuttle.fromTime);\n                setToTime(shuttle.toTime);\n                setToDate(shuttle.toDate.substring(0 , 10));\n                setDuration(shuttle.duration);\n                setPrice(shuttle.price)\n            }\n        }\n    } , [ dispatch, shuttleId , success , shuttle])\n\n    const handleUpdate = () => {\n            dispatch(updateShuttle({id : shuttleId , name,number,from,to,fromDate,toDate ,fromTime,toTime,duration,price}));\n    }\n\n    return (\n        <>\n            <section id=\"userEdit\">\n                <p className=\"title\">Edit Shuttle</p>\n                <div className=\"msg-container\">\n                </div>\n                <div className=\"name-container\">\n                    <label className=\"name-label\">name</label>\n                    <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} placeholder=\"name\" htmlFor=\"name\" />\n                </div>\n\n                <div className=\"number-container\">\n                    <label className=\"number-label\">number</label>\n                    <input type=\"text\" onChange={(e) => setNumber(e.target.value)} value={number} placeholder=\"Shuttle number\" htmlFor=\"number\" />\n                </div>\n\n                <div className=\"from-container\">\n                    <label className=\"from-label\">on Boarding Place</label>\n                    <input type=\"text\" onChange={(e) => setFrom(e.target.value)} value={from} placeholder=\"On Boarding Place\" />\n                </div>\n\n                <div className=\"to-container\">\n                    <label className=\"to-label\">Off boarding place</label>\n                    <input type=\"text\" onChange={(e) => setTo(e.target.value)} value={to} placeholder=\"to\" />\n                </div>\n                <div className=\"fromDate-container\">\n                    <label className=\"fromDate-label\">OnBoarding Date</label>\n                    <input type=\"Date\" onChange={(e) => setFromDate((e.target.value))} value={fromDate} placeholder=\"fromDate\" />\n                </div>\n                <div className=\"toDate-container\">\n                    <label className=\"toDate-label\">Off Boarding Date</label>\n                    <input type=\"Date\" onChange={(e) => setToDate((e.target.value))} value={toDate} placeholder=\"number\"  />\n                </div>\n                <div className=\"fromTime-container\">\n                    <label className=\"fromTime-label\">OnBoarding Time</label>\n                    <input type=\"Time\" onChange={(e) => setFromTime((e.target.value))} value={fromTime} placeholder=\"on Boarding Time\" />\n                </div>\n                <div className=\"toTime-container\">\n                    <label className=\"toTime-label\">Off Boarding Time</label>\n                    <input type=\"Time\" onChange={(e) => setToTime((e.target.value))} value={toTime} placeholder=\"Off Boarding Time\"  />\n                </div>\n                <div className=\"duration-container\">\n                    <label className=\"duration-label\">Travel Duration</label>\n                    <input type=\"Time\" onChange={(e) => setDuration((e.target.value))} value={duration} placeholder=\"Total Travel Duration\"  />\n                </div>\n                <div className=\"Price-container\">\n                    <label className=\"price-label\">Price (Rs)</label>\n                    <input type=\"number\" onChange={(e) => setPrice((e.target.value))} value={price} placeholder=\"Price\" />\n                </div>\n                <button onClick={handleUpdate} className=\"submit\">Update</button>\n            </section>\n        </>\n    )\n}\n\nexport default ShuttleEdit\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\index.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Passenger.js",["182"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {savePassengersDetails} from '../actions/shuttleActions'\nimport {loadShuttle} from '../actions/shuttleActions'\n\nconst Passenger = ({seats , id , callFunction , showWarning}) => {\n    const [count, setCount] = useState(1);\n\n    const [name , setName] = useState('');\n    const [age , setAge] = useState(0);\n    const [seat , setSeat] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userData} = userLogin;\n\n    const getShuttle = useSelector(state => state.getShuttle);\n    const {loading : loadingShuttle , shuttle} = getShuttle;\n\n    const shuttleDetails = useSelector(state => state.getShuttle)\n    const {loading , shuttle : Shuttle} = shuttleDetails;\n\n    let seatsFilled;\n\n    if(!loading){\n        seatsFilled = Shuttle.seats ? Shuttle.seats : [];\n    }\n\n    useEffect(\n        () => {\n\n            dispatch(loadShuttle(id));\n        }\n    , [dispatch , id])\n\n    const handleSubmit = () => {\n\n    if(!loading && seatsFilled.indexOf(seat) == -1){\n        if(count >= seats) {\n            seatsFilled.push(seat)\n            dispatch(savePassengersDetails({name , age , seat , shuttle : shuttle._id , user : userData._id}))\n            callFunction()\n        } else {\n            if(!loadingShuttle){\n                seatsFilled.push(seat)\n                dispatch(savePassengersDetails({name , age , seat , shuttle : shuttle._id , user : userData._id}))\n                setTimeout(() => {\n                    setName('')\n                    setAge(0)\n                    setSeat('')\n                    setCount(count + 1)\n                } , 1000)\n\n                }\n            }\n    } else {\n        showWarning();\n    }\n    }\n\n    return (\n\n        Number(count)<=seats ? \n\n                <div className=\"details-container\">\n                    <p className=\"title\">Passenger {count}</p>\n                    <div className=\"grid-container\">\n                        <div className=\"div name\">\n                            <label className=\"name-label\" htmlFor=\"name\">Passenger Name</label>\n                            <input onChange={e => setName(e.target.value)} type=\"text\" value={name} placeholder=\"Passenger's Name\" />\n                        </div>\n                        <div className=\"div age\">\n                            <label className=\"age-label\" htmlFor=\"age\">Age</label>\n                            <input onChange={e => setAge(e.target.value)} type=\"number\" value={age} placeholder=\"Passenger's Age\" />\n                        </div>\n                        <div className=\"div seat\">\n                            <label className=\"seat-label\" htmlFor=\"seats\">Seat No</label>\n                            <input onChange={e => setSeat(e.target.value)} type=\"text\" value={seat} placeholder=\"Passenger's Seat Number\"/>\n                        </div>\n                    </div>\n                    <button onClick={handleSubmit} className=\"save-btn div\">Save</button>\n                </div>\n        \n        : <p>You have successfully filled the form!! checkout the next steps</p>\n\n    );\n}\n\nexport default Passenger\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\Components\\Steps.js",["183","184","185","186"],"import React from 'react'\nimport '../css/steps.css'\n\nconst Steps = ({step1, step2 , step3 , step4}) => {\n\n    return (\n    <section id=\"navigate\">\n        <a href=\"#\">\n            <button className=\"nav\" disabled={!step1}>Login</button>\n        </a>\n        <a href=\"#\">\n            <button className=\"nav\" disabled={!step2}>Billing Address</button>\n        </a>\n        <a href=\"#\">\n            <button className=\"nav\" disabled={!step3}>Payment Method</button>\n        </a>\n        <a href=\"#\">\n            <button className=\"nav\" disabled={!step4}>Order</button>\n        </a>\n    </section>\n    )\n}\n\nexport default Steps\n","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\orderActions.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\userConstants.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\constants\\shuttleConstants.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\userActions.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\actions\\shuttleActions.js",["187","188","189"],"import axios from 'axios'\nimport { SHUTTLE_UPDATE_DISPATCH, SHUTTLE_UPDATE_SUCCESS , SHUTTLE_UPDATE_FAIL , LOAD_SHUTTLES_FAIL, LOAD_SHUTTLES_REQUEST, LOAD_SHUTTLES_SUCCESS, LOAD_SHUTTLE_FAIL, LOAD_SHUTTLE_REQUEST, LOAD_SHUTTLE_SUCCESS, SAVE_SEATS_DISPATCH, SAVE_SEATS_FAIL, SAVE_SEATS_SUCCESS, SHUTTLE_DELETE_DISPATCH, SHUTTLE_DELETE_SUCCESS, SHUTTLE_DELETE_FAIL, SHUTTLE_ADD_DISPATCH, SHUTTLE_ADD_SUCCESS, SHUTTLE_ADD_FAIL } from '../constants/shuttleConstants'\n\nexport const loadShuttles = () => async (dispatch) => {\n    dispatch ({type : LOAD_SHUTTLES_REQUEST , loading : true})\n\n    try {\n        const {data} = await axios.get(`http://localhost:5000/api/shuttles/`)\n        dispatch ({type : LOAD_SHUTTLES_SUCCESS , payload : data , loading : false})\n    } catch (error) {\n        dispatch({\n            type : LOAD_SHUTTLES_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }\n} \n\nexport const loadShuttle = (id) => async (dispatch) => {\n    dispatch ({type : LOAD_SHUTTLE_REQUEST , loading : true})\n\n    try {\n        const {data} = await axios.get(`http://localhost:5000/api/shuttles/${id}`)\n        dispatch ({type : LOAD_SHUTTLE_SUCCESS , payload : data , loading : false})\n    } catch (error) {\n        dispatch({\n            type : LOAD_SHUTTLE_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }\n}\n\nexport const savePassengersDetails = (data) => async (dispatch) => {\n        dispatch ({type : SAVE_SEATS_DISPATCH , loading: true})\n\n    try {\n        let items = [];\n\n        items = localStorage.getItem('passengers') ? JSON.parse(localStorage.getItem('passengers')): [];\n        items.push(data);\n\n        console.log(JSON.parse(localStorage.getItem('passengers')))\n        localStorage.setItem('passengers' ,JSON.stringify(items))\n\n        dispatch ({type : SAVE_SEATS_SUCCESS , payload : items , loading : false})\n    } catch(error) {\n        dispatch({\n            type : SAVE_SEATS_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }\n}\n\nexport const deletePassengerDetails = (seatId) => async (dispatch) => {\n        dispatch ({type : SAVE_SEATS_DISPATCH , loading: true})\n\n    try {\n        let items = [];\n\n        items = localStorage.getItem('passengers') ? JSON.parse(localStorage.getItem('passengers')): [];\n        items = items.filter(item => item.seat != seatId);\n\n        console.log(items);\n        localStorage.setItem('passengers' ,JSON.stringify(items))\n\n        dispatch ({type : SAVE_SEATS_SUCCESS , payload : items , loading : false})\n    } catch(error) {\n        dispatch({\n            type : SAVE_SEATS_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }\n}\n\nexport const updateShuttle = (shuttle) => async (dispatch , getState) => {\n    dispatch ({type : SHUTTLE_UPDATE_DISPATCH , loading: true})\n\n    try {\n\n        const user = getState().userLogin.userData;\n\n        const header = {headers : {'Content-Type' : 'application/json' , 'Authorization' : `Bearer ${user.token}`}};\n        \n        const {data} = await axios.put(`http://localhost:5000/api/shuttles/${shuttle.id}` , shuttle , header)\n\n        dispatch ({type : SHUTTLE_UPDATE_SUCCESS , success : true , loading : false})\n    } catch(error) {\n        dispatch({\n            type : SHUTTLE_UPDATE_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }   \n}\n\nexport const deleteShuttle = (id) => async (dispatch , getState) => {\n    dispatch ({type : SHUTTLE_DELETE_DISPATCH , loading: true})\n\n    try {\n\n        const user = getState().userLogin.userData;\n\n        const header = {headers : {'Content-Type' : 'application/json' , 'Authorization' : `Bearer ${user.token}`}};\n\n        const {data} = await axios.delete(`http://localhost:5000/api/shuttles/${id}` , header)\n\n        dispatch ({type : SHUTTLE_DELETE_SUCCESS , success : true , loading : false})\n    } catch(error) {\n        dispatch({\n            type : SHUTTLE_DELETE_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }   \n}\n\nexport const addShuttle = (shuttle) => async (dispatch , getState) => {\n    dispatch ({type : SHUTTLE_ADD_DISPATCH , loading: true})\n\n    try {\n\n        const user = getState().userLogin.userData;\n\n        const header = {headers : {'Authorization' : `Bearer ${user.token}`}};\n\n        const {data} = await axios.post(`http://localhost:5000/api/shuttles/` , shuttle , header)\n\n        dispatch ({type : SHUTTLE_ADD_SUCCESS , success : true , payload : data , loading : false})\n    } catch(error) {\n        dispatch({\n            type : SHUTTLE_ADD_FAIL,\n            payload : error.message ? error.message : error\n        })\n    }   \n}","C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\shuttleReducers.js",[],"C:\\Manan\\mit\\FSD\\lunar_pass_mini\\frontend\\src\\reducers\\userReducers.js",[],{"ruleId":"190","severity":1,"message":"191","line":83,"column":17,"nodeType":"192","endLine":83,"endColumn":50},{"ruleId":"193","severity":1,"message":"194","line":29,"column":7,"nodeType":"195","endLine":29,"endColumn":28,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"194","line":29,"column":7,"nodeType":"195","endLine":29,"endColumn":27,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":34,"column":21,"nodeType":"200","messageId":"201","endLine":34,"endColumn":23},{"ruleId":"202","severity":1,"message":"203","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"206","line":4,"column":23,"nodeType":"204","messageId":"205","endLine":4,"endColumn":34},{"ruleId":"193","severity":1,"message":"207","line":20,"column":7,"nodeType":"195","endLine":20,"endColumn":18,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":47,"column":93,"nodeType":"192","messageId":"211","endLine":47,"endColumn":162,"fix":"212"},{"ruleId":"202","severity":1,"message":"213","line":18,"column":12,"nodeType":"204","messageId":"205","endLine":18,"endColumn":19},{"ruleId":"202","severity":1,"message":"214","line":24,"column":44,"nodeType":"204","messageId":"205","endLine":24,"endColumn":56},{"ruleId":"193","severity":1,"message":"215","line":38,"column":9,"nodeType":"195","endLine":38,"endColumn":53,"suggestions":"216"},{"ruleId":"198","severity":1,"message":"199","line":43,"column":21,"nodeType":"200","messageId":"201","endLine":43,"endColumn":23},{"ruleId":"202","severity":1,"message":"217","line":15,"column":20,"nodeType":"204","messageId":"205","endLine":15,"endColumn":33},{"ruleId":"202","severity":1,"message":"218","line":5,"column":9,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"219","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":27},{"ruleId":"202","severity":1,"message":"220","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":21},{"ruleId":"202","severity":1,"message":"221","line":20,"column":22,"nodeType":"204","messageId":"205","endLine":20,"endColumn":35},{"ruleId":"202","severity":1,"message":"222","line":20,"column":46,"nodeType":"204","messageId":"205","endLine":20,"endColumn":58},{"ruleId":"193","severity":1,"message":"223","line":33,"column":9,"nodeType":"195","endLine":33,"endColumn":34,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"225","line":22,"column":23,"nodeType":"204","messageId":"205","endLine":22,"endColumn":41},{"ruleId":"193","severity":1,"message":"226","line":45,"column":9,"nodeType":"195","endLine":45,"endColumn":55,"suggestions":"227"},{"ruleId":"202","severity":1,"message":"228","line":3,"column":39,"nodeType":"204","messageId":"205","endLine":3,"endColumn":53},{"ruleId":"202","severity":1,"message":"213","line":16,"column":12,"nodeType":"204","messageId":"205","endLine":16,"endColumn":19},{"ruleId":"202","severity":1,"message":"221","line":19,"column":20,"nodeType":"204","messageId":"205","endLine":19,"endColumn":33},{"ruleId":"202","severity":1,"message":"229","line":19,"column":36,"nodeType":"204","messageId":"205","endLine":19,"endColumn":43},{"ruleId":"202","severity":1,"message":"213","line":22,"column":22,"nodeType":"204","messageId":"205","endLine":22,"endColumn":29},{"ruleId":"193","severity":1,"message":"230","line":30,"column":9,"nodeType":"195","endLine":30,"endColumn":30,"suggestions":"231"},{"ruleId":"202","severity":1,"message":"221","line":24,"column":20,"nodeType":"204","messageId":"205","endLine":24,"endColumn":33},{"ruleId":"202","severity":1,"message":"213","line":27,"column":12,"nodeType":"204","messageId":"205","endLine":27,"endColumn":19},{"ruleId":"193","severity":1,"message":"230","line":50,"column":9,"nodeType":"195","endLine":50,"endColumn":51,"suggestions":"232"},{"ruleId":"198","severity":1,"message":"199","line":39,"column":46,"nodeType":"200","messageId":"201","endLine":39,"endColumn":48},{"ruleId":"233","severity":1,"message":"234","line":8,"column":9,"nodeType":"192","endLine":8,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":11,"column":9,"nodeType":"192","endLine":11,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":14,"column":9,"nodeType":"192","endLine":14,"endColumn":21},{"ruleId":"233","severity":1,"message":"234","line":17,"column":9,"nodeType":"192","endLine":17,"endColumn":21},{"ruleId":"198","severity":1,"message":"235","line":60,"column":48,"nodeType":"200","messageId":"201","endLine":60,"endColumn":50},{"ruleId":"202","severity":1,"message":"236","line":83,"column":16,"nodeType":"204","messageId":"205","endLine":83,"endColumn":20},{"ruleId":"202","severity":1,"message":"236","line":103,"column":16,"nodeType":"204","messageId":"205","endLine":103,"endColumn":20},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["237"],["238"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["239"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"240","text":"241"},"'loading' is assigned a value but never used.","'successTable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadingUpdate'. Either include it or remove the dependency array.",["242"],"'loadingDelete' is assigned a value but never used.","'PayPalButton' is defined but never used.","'ORDER_FETCH_RESET' is defined but never used.","'loadShuttle' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'updatedorder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["243"],"'loadingCreateOrder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'order._id'. Either include them or remove the dependency array.",["244"],"'getUserProfile' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["245"],["246"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},[1541,1541]," rel=\"noreferrer\"",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [history, loading, redirect, userData]",{"range":"263","text":"264"},"Update the dependencies array to be: [history, loading, redirect, success]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, userData, success, updateUser, loadingUpdate]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, id, order, success]",{"range":"271","text":"272"},"Update the dependencies array to be: [shuttleId, dispatch, totalPrice, success, history, order._id]",{"range":"273","text":"274"},"Update the dependencies array to be: [dispatch, history, success]",{"range":"275","text":"276"},"Update the dependencies array to be: [dispatch, shuttleId, success, shuttle, history]",{"range":"277","text":"278"},[786,807],"[history, loading, redirect, userData]",[890,910],"[history, loading, redirect, success]",[554,565],"[dispatch, match.params.id]",[1358,1402],"[dispatch, userData, success, updateUser, loadingUpdate]",[1038,1063],"[dispatch, id, order, success]",[1488,1534],"[shuttleId, dispatch, totalPrice, success, history, order._id]",[1116,1137],"[dispatch, history, success]",[1877,1919],"[dispatch, shuttleId, success, shuttle, history]"]